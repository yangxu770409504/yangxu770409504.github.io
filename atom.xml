<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yangxu770409504.github.io</id>
    <title>Teemo&apos;s Blog</title>
    <updated>2020-06-17T09:44:19.996Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yangxu770409504.github.io"/>
    <link rel="self" href="https://yangxu770409504.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://yangxu770409504.github.io/images/avatar.png</logo>
    <icon>https://yangxu770409504.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Teemo&apos;s Blog</rights>
    <entry>
        <title type="html"><![CDATA[Test3]]></title>
        <id>https://yangxu770409504.github.io/post/test3/</id>
        <link href="https://yangxu770409504.github.io/post/test3/">
        </link>
        <updated>2020-02-24T07:29:27.000Z</updated>
        <content type="html"><![CDATA[<h2 id="这是我">这是我</h2>
<p><em>好的</em></p>
<ul>
<li>序列号1</li>
<li>序列号2</li>
<li>序列号3</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SpringBoot - JPA]]></title>
        <id>https://yangxu770409504.github.io/post/test2-ce-shi-wen-zhang-2/</id>
        <link href="https://yangxu770409504.github.io/post/test2-ce-shi-wen-zhang-2/">
        </link>
        <updated>2020-02-24T07:28:08.000Z</updated>
        <content type="html"><![CDATA[<p>update：2020-02-19 22:39:23<br>
关键字：JPA、MySQL、数据库、Hibernate</p>
<p>0、POM文件：<br>
<dependency><br>
<groupId>org.springframework.boot</groupId><br>
<artifactId>spring-boot-starter-data-jdbc</artifactId><br>
</dependency><br>
<dependency><br>
<groupId>org.springframework.boot</groupId><br>
<artifactId>spring-boot-starter-data-jpa</artifactId><br>
</dependency><br>
<dependency><br>
<groupId>mysql</groupId><br>
<artifactId>mysql-connector-java</artifactId><br>
<scope>runtime</scope><br>
</dependency></p>
<p>1、配置yml文件：<br>
server:<br>
port: 8082</p>
<p>spring:<br>
datasource:<br>
username: root<br>
password: 12345678<br>
url: jdbc:mysql://aly1.imyx.top:3307/SpringBootDB<br>
driver-class-name: com.mysql.jdbc.Driver<br>
jpa:<br>
hibernate:<br>
# 更新或者创建数据表结构<br>
ddl-auto: update<br>
# 控制台显示SQL<br>
show-sql: true</p>
<p>2、写Entity：<br>
@Entity<br>
public class Users {</p>
<pre><code>@Id
@GeneratedValue(strategy=GenerationType.AUTO)
private Integer id;
private String username;
private String password;
private Date lastLoginTime;
private String userRole;

// getter&amp;setter方法省略
</code></pre>
<p>}</p>
<p>3、写Repository：<br>
// 继承JpaRepository来完成对数据库的操作<br>
public interface UsersRepository extends JpaRepository&lt;Users, Integer&gt; {</p>
<pre><code>Users getUsersById(Integer id);

List&lt;Users&gt; findAllByUserRole(String userRole);
</code></pre>
<p>}</p>
<p>4、写Controller：<br>
@Controller<br>
public class LoginController {</p>
<pre><code>@Autowired
UsersRepository usersRepository;

@ResponseBody
@GetMapping(&quot;/getTotal&quot;)
public long getTotal(){
    return usersRepository.count();
}

@ResponseBody
@GetMapping(&quot;/getAll&quot;)
public List&lt;Users&gt; getAll() {
    return usersRepository.findAll();
}

@ResponseBody
@GetMapping(&quot;/getUsersById/{id}&quot;)
public Users getUsersById(@PathVariable(&quot;id&quot;) Integer id) {
    System.out.println(id);
    Users users = usersRepository.getUsersById(id);
    return users;
}

@ResponseBody
@GetMapping(&quot;/findAllByUserRole/{userRole}&quot;)
public List&lt;Users&gt; findAllByUserRole(@PathVariable(&quot;userRole&quot;) String userRole) {
    System.out.println(userRole);
    List&lt;Users&gt; users = usersRepository.findAllByUserRole(userRole);
    return users;
}
</code></pre>
<p>}</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[test测试标题]]></title>
        <id>https://yangxu770409504.github.io/post/test-ce-shi-biao-ti/</id>
        <link href="https://yangxu770409504.github.io/post/test-ce-shi-biao-ti/">
        </link>
        <updated>2020-02-24T07:27:07.000Z</updated>
        <content type="html"><![CDATA[<p>这是一个测试文章，用博客生成器做的。😎</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[关于]]></title>
        <id>https://yangxu770409504.github.io/post/about/</id>
        <link href="https://yangxu770409504.github.io/post/about/">
        </link>
        <updated>2019-01-25T11:09:48.000Z</updated>
        <content type="html"><![CDATA[<blockquote>
<p>欢迎来到我的小站呀，很高兴遇见你！🤝</p>
</blockquote>
<h2 id="关于本站">🏠 关于本站</h2>
<h2 id="博主是谁">👨‍💻 博主是谁</h2>
<h2 id="兴趣爱好">⛹ 兴趣爱好</h2>
<h2 id="联系我呀">📬 联系我呀</h2>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://yangxu770409504.github.io/post/hello-gridea/</id>
        <link href="https://yangxu770409504.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="http://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>