<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://yangxu770409504.github.io</id>
    <title>Teemo&apos;s Blog</title>
    <updated>2020-02-24T07:33:59.048Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://yangxu770409504.github.io"/>
    <link rel="self" href="https://yangxu770409504.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://yangxu770409504.github.io/images/avatar.png</logo>
    <icon>https://yangxu770409504.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Teemo&apos;s Blog</rights>
    <entry>
        <title type="html"><![CDATA[Test3]]></title>
        <id>https://yangxu770409504.github.io/post/test3/</id>
        <link href="https://yangxu770409504.github.io/post/test3/">
        </link>
        <updated>2020-02-24T07:29:27.000Z</updated>
        <content type="html"><![CDATA[<h2 id="这是我">这是我</h2>
<p><em>好的</em></p>
<ul>
<li>序列号1</li>
<li>序列号2</li>
<li>序列号3</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[SpringBoot - JPA]]></title>
        <id>https://yangxu770409504.github.io/post/test2-ce-shi-wen-zhang-2/</id>
        <link href="https://yangxu770409504.github.io/post/test2-ce-shi-wen-zhang-2/">
        </link>
        <updated>2020-02-24T07:28:08.000Z</updated>
        <content type="html"><![CDATA[<p>update：2020-02-19 22:39:23<br>
关键字：JPA、MySQL、数据库、Hibernate</p>
<p>0、POM文件：<br>
<dependency><br>
<groupId>org.springframework.boot</groupId><br>
<artifactId>spring-boot-starter-data-jdbc</artifactId><br>
</dependency><br>
<dependency><br>
<groupId>org.springframework.boot</groupId><br>
<artifactId>spring-boot-starter-data-jpa</artifactId><br>
</dependency><br>
<dependency><br>
<groupId>mysql</groupId><br>
<artifactId>mysql-connector-java</artifactId><br>
<scope>runtime</scope><br>
</dependency></p>
<p>1、配置yml文件：<br>
server:<br>
port: 8082</p>
<p>spring:<br>
datasource:<br>
username: root<br>
password: 12345678<br>
url: jdbc:mysql://aly1.imyx.top:3307/SpringBootDB<br>
driver-class-name: com.mysql.jdbc.Driver<br>
jpa:<br>
hibernate:<br>
# 更新或者创建数据表结构<br>
ddl-auto: update<br>
# 控制台显示SQL<br>
show-sql: true</p>
<p>2、写Entity：<br>
@Entity<br>
public class Users {</p>
<pre><code>@Id
@GeneratedValue(strategy=GenerationType.AUTO)
private Integer id;
private String username;
private String password;
private Date lastLoginTime;
private String userRole;

// getter&amp;setter方法省略
</code></pre>
<p>}</p>
<p>3、写Repository：<br>
// 继承JpaRepository来完成对数据库的操作<br>
public interface UsersRepository extends JpaRepository&lt;Users, Integer&gt; {</p>
<pre><code>Users getUsersById(Integer id);

List&lt;Users&gt; findAllByUserRole(String userRole);
</code></pre>
<p>}</p>
<p>4、写Controller：<br>
@Controller<br>
public class LoginController {</p>
<pre><code>@Autowired
UsersRepository usersRepository;

@ResponseBody
@GetMapping(&quot;/getTotal&quot;)
public long getTotal(){
    return usersRepository.count();
}

@ResponseBody
@GetMapping(&quot;/getAll&quot;)
public List&lt;Users&gt; getAll() {
    return usersRepository.findAll();
}

@ResponseBody
@GetMapping(&quot;/getUsersById/{id}&quot;)
public Users getUsersById(@PathVariable(&quot;id&quot;) Integer id) {
    System.out.println(id);
    Users users = usersRepository.getUsersById(id);
    return users;
}

@ResponseBody
@GetMapping(&quot;/findAllByUserRole/{userRole}&quot;)
public List&lt;Users&gt; findAllByUserRole(@PathVariable(&quot;userRole&quot;) String userRole) {
    System.out.println(userRole);
    List&lt;Users&gt; users = usersRepository.findAllByUserRole(userRole);
    return users;
}
</code></pre>
<p>}</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[test测试标题]]></title>
        <id>https://yangxu770409504.github.io/post/test-ce-shi-biao-ti/</id>
        <link href="https://yangxu770409504.github.io/post/test-ce-shi-biao-ti/">
        </link>
        <updated>2020-02-24T07:27:07.000Z</updated>
        <content type="html"><![CDATA[<p>这是一个测试文章，用博客生成器做的。😎</p>
]]></content>
    </entry>
</feed>